do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17,...)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (0==v65) then v19=v1(v4(v30,1,1));return "";end end else local v66=0;local v67;while true do if (v66==0) then v67=v3(v1(v30,16));if v19 then local v79=v6(v67,v19);v19=nil;return v79;else return v67;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v68=0 -0;local v69;while true do if (v68==(0 -0)) then v69=(v31/((1149 -(59 + 875 + 213))^(v32-(1 + 0))))%(2^(((v33-1) -(v32-1)) + (1 -0)));return v69-(v69%(1 + 0));end end else local v70=1873 -(858 + 1015);local v71;while true do if ((0 -0)==v70) then v71=(2 + 0 + 0)^(v32-1);return (((v31%(v71 + v71))>=v71) and ((1125 -(733 + 390)) -1)) or ((1179 -(487 + 692)) -0);end end end end local function v21()local v38=0 -(0 + 0);local v39;while true do if (v38==(1 + 0)) then return v39;end if (v38==(0 -0)) then v39=v2(v16,v18,v18);v18=v18 + (4 -3);v38=765 -(390 + 374);end end end local function v22()local v40,v41=v2(v16,v18,v18 + (6 -4));v18=v18 + (363 -(182 + 179));return (v41 * (1017 -(183 + 578))) + v40;end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + (360 -(350 + 7)));v18=v18 + ((1082 -(373 + 694)) -11);return (v45 * (12568383 + (4210168 -(1238 + 97)))) + (v44 * (44890 + (53685 -33039))) + (v43 * (189 + 67)) + v42;end local function v24()local v46=v23();local v47=v23();return (( -(3 -1) * v20(v47,(1215 -(955 + 169)) -59)) + (3 -2)) * (2^(v20(v47,342 -(255 + 66),31) -(2683 -(695 + 965)))) * ((((v20(v47,868 -(307 + 230 + (811 -(308 + 173))),14 + 5 + 1) * ((403 -(186 + 215))^(30 + 2))) + v46)/((1965 -(1448 + 515))^(24 + 28))) + 1 + 0);end local function v25(v34)local v48;if  not v34 then v34=v23();if (v34==(0 + 0)) then return "";end end v48=v4(v16,v18,(v18 + v34) -1);v18=v18 + v34;local v49={};for v63=1 + 0, #v48 do v49[v63]=v3(v2(v4(v48,v63,v63)));end return v7(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=1481 -(754 + 727);local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50==(587 -(402 + 181))) then while true do if (v51~=(1476 -(518 + 957))) then else v54=nil;v55=nil;v51=3 -1;end if (v51==3) then v58=nil;while true do local v80=0;local v81;while true do if (v80==(0 + 0)) then v81=135 -(54 + 81);while true do if (v81~=0) then else local v100=0 -0;while true do if (v100==(4 -3)) then v81=2 -1;break;end if (v100==(0 + 0)) then if (v52==(3 -2)) then local v105=0;while true do if (v105==(0 -0)) then v56={v53,v54,nil,v55};v57=v23();v105=1 + 0;end if (v105==(1 + 0)) then v58={};v52=3 -1;break;end end end if (v52~=(8 -5)) then else for v106=1 + 0,v23() do v54[v106-(1 + 0)]=v28();end for v108=1,v23() do v55[v108]=v23();end return v56;end v100=1;end end end if (v81==(1499 -(138 + 1360))) then if (v52==(0 + 0)) then local v101=0;while true do if (v101~=(0 + 0)) then else v53={};v54={};v101=1 + 0;end if (v101==(1 -0)) then v55={};v52=1 + 0;break;end end end if (2==v52) then local v102=0 -0;local v103;while true do if (v102==(0 -0)) then v103=0;while true do if (v103==(0 + 0)) then local v110=0 + 0;while true do if (v110==1) then v103=2 -1;break;end if ((0 -0)~=v110) then else for v116=413 -(60 + 352),v57 do local v117=0 -0;local v118;local v119;local v120;while true do if (v117~=(227 -(194 + 33))) then else v118=0 -0;v119=nil;v117=1775 -(1392 + 382);end if ((2 -1)==v117) then v120=nil;while true do if ((0 -0)~=v118) then else local v223=0 -0;local v224;while true do if ((0 + 0)==v223) then v224=0 -0;while true do if (v224==1) then v118=1248 -(772 + 475);break;end if (v224==(0 + 0)) then local v272=0 -0;while true do if (v272==(1 + 0)) then v224=1 -0;break;end if (v272==(512 -(329 + 183))) then v119=v21();v120=nil;v272=1;end end end end break;end end end if ((830 -(796 + 33))==v118) then if (v119==1) then v120=v21()~=(26 -(5 + 21));elseif (v119==(2 + 0)) then v120=v24();elseif (v119~=3) then else v120=v25();end v58[v116]=v120;break;end end break;end end end v56[3]=v21();v110=1 + 0;end end end if ((2 -1)==v103) then for v111=1,v23() do local v112=983 -(35 + 948);local v113;local v114;while true do if (v112==(116 -(112 + 4))) then v113=0;v114=nil;v112=1138 -(657 + 480);end if ((451 -(221 + 229))~=v112) then else while true do if (v113==0) then v114=v21();if (v20(v114,1016 -(801 + 214),1 + 0)~=(0 + 0)) then else local v208=0 -0;local v209;local v210;local v211;local v212;while true do if ((947 -(62 + 884))~=v208) then else v211=nil;v212=nil;v208=5 -3;end if (v208~=(2 -0)) then else while true do if (v209~=(1500 -(1182 + 316))) then else local v254=0;while true do if (v254~=(1581 -(528 + 1053))) then else if (v20(v211,2 -1,1401 -(1392 + 8))==(1 + 0)) then v212[2 + 0]=v58[v212[2 -0]];end if (v20(v211,7 -5,1 + 1)==(1 + 0)) then v212[1629 -(1347 + 279)]=v58[v212[3]];end v254=1968 -(215 + 1752);end if (v254==1) then v209=3;break;end end end if (v209==(1615 -(959 + 656))) then local v255=0;local v256;while true do if (v255~=0) then else v256=1043 -(45 + 998);while true do if (v256==(903 -(31 + 871))) then v209=3 -2;break;end if (v256~=(0 + 0)) then else local v306=0 -0;while true do if (v306==(0 + 0)) then v210=v20(v114,1093 -(683 + 408),3 + 0);v211=v20(v114,7 -3,6);v306=1;end if ((1 + 0)~=v306) then else v256=1983 -(568 + 1414);break;end end end end break;end end end if (v209==1) then v212={v22(),v22(),nil,nil};if (v210==0) then local v275=0 + 0;local v276;local v277;while true do if (1~=v275) then else while true do if (v276==(0 -0)) then v277=647 -(622 + 25);while true do if (v277~=(1787 -(997 + 790))) then else v212[3]=v22();v212[4]=v22();break;end end break;end end break;end if ((1262 -(843 + 419))==v275) then v276=872 -(569 + 303);v277=nil;v275=1 -0;end end elseif (v210==(1 -0)) then v212[12 -9]=v23();elseif (v210==(1 + 1)) then v212[2 + 1]=v23() -((6 -4)^(13 + 3));elseif (v210==(635 -(520 + 112))) then local v316=0;while true do if (v316==0) then v212[1875 -(1290 + 582)]=v23() -(2^(577 -(215 + 346)));v212[4]=v22();break;end end end v209=2 -0;end if (v209==(7 -4)) then if (v20(v211,3,634 -(14 + 617))==1) then v212[13 -9]=v58[v212[4 + 0]];end v53[v111]=v212;break;end end break;end if (v208~=0) then else v209=0;v210=nil;v208=914 -(458 + 455);end end end break;end end break;end end end v52=8 -5;break;end end break;end end end break;end end break;end end end break;end if (v51~=(587 -(157 + 430))) then else local v77=0 -0;while true do if ((1 + 0)~=v77) then else v51=1;break;end if (v77~=0) then else v52=1666 -(461 + 1205);v53=nil;v77=3 -2;end end end if ((892 -(877 + 13))==v51) then local v78=0;while true do if (v78==(924 -(20 + 904))) then v56=nil;v57=nil;v78=1;end if (v78==(1 + 0)) then v51=7 -4;break;end end end end break;end if (v50==(731 -(616 + 112))) then v57=nil;v58=nil;v50=8 -4;end if (v50~=2) then else v55=nil;v56=nil;v50=2 + 1;end if (v50==(0 + 0)) then v51=0;v52=nil;v50=1 -0;end if (v50==(1 + 0)) then v53=nil;v54=nil;v50=2 -0;end end end local function v29(v35,v36,v37)local v59=0;local v60;local v61;local v62;while true do if (v59==1) then v62=v35[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v12("#",...) -1;local function v76()local v82=v60;local v83=v61;local v84=v62;local v85=v27;local v86={};local v87={};local v88={};for v94=0 + (1012 -(590 + 422)),v75 do if (((1533 -((111 -(7 + 27)) + 1090))==(560 -(185 + 9))) and (v94>=v84)) then v86[v94-v84]=v74[v94 + 1 + 0];else v88[v94]=v74[v94 + 1 + 0 + 0];end end local v89=(v75-v84) + (22 -(13 + 8));local v90;local v91;while true do local v95=0 + 0;local v96;local v97;while true do if (((2659 + 2144)==((16343 -9549) -(1437 + 554))) and (v95==(752 -(449 + 302)))) then while true do if ((v96==(453 -(196 + (2003 -(1626 + 120))))) or ((5256 -1823)<=(4792 -3713))) then v97=1880 -(290 + 1590);while true do if ((v97==(1 + 0)) or ((12697 -8100)>(4216 + 512))) then if ((v91<=(36 -15)) or (((39756 -31394) -5811)>4547)) then if ((v91<=(5 + 5)) or ((10180 -5740)<=(4448 -(871 + 171)))) then if (((3201 -(707 + 349))>=(1345 -(153 + 476))) and (v91<=4)) then if ((v91<=(1 -0)) or ((6466 -3951)<=((5744 -3070) -(203 + 1213)))) then if (((445 + 150)==(2097 -(503 + 999))) and (v91>(0 + 0))) then local v121=0 + 0 + 0;local v122;while true do if ((v121==(0 + 0)) or ((5058 -(686 + 658))<(5579 -3775))) then v122=v90[468 -(22 + 444)];v88[v122](v88[v122 + 1]);break;end end elseif (((2010 + 1419)>=(4261 -2206)) and v88[v90[2 + 0]]) then v72=v72 + (85 -(10 + 74));else v72=v90[5 -2];end elseif (((3896 -(488 + 166 + 103))<=(13066 -9411)) and (v91<=((1500 -615) -(265 + 618)))) then v88[v90[2 + (0 -0)]][v90[400 -(96 + 301)]]=v90[5 -1];elseif ((v91>((1044 -(284 + 757)) + (0 -0))) or (((801 + 1674) -(112 + 1677))>=(2003 + 1250))) then local v159=0 + 0 + 0;local v160;local v161;local v162;while true do if ((((26425 -13466) -9050)>=(4248 -3278)) and ((0 + 0)==v159)) then local v229=0 + 0;while true do if (((5597 -1706)<=(4831 -(60 + 490))) and (v229==(3 -(2 + 0)))) then v159=1 + 0 + 0;break;end if ((v229==(0 + 0)) or ((2 + 132)>=(907 + 2826))) then v160=v90[(3087 -1645) -(1387 + 53)];v161={v88[v160](v13(v88,v160 + 1,v73))};v229=1 -0;end end end if ((v159==(1948 -(459 + 1488))) or ((1389 -(122 + 49))>=(5105 -(247 + 734)))) then v162=0 + 0;for v234=v160,v90[1 + 0 + 3] do local v235=0 -0;while true do if (((595 -(34 + 561))==v235) or ((1 + 68 + 166)>(3598 -(801 + 102)))) then v162=v162 + (2 -1);v88[v234]=v161[v162];break;end end end break;end end else v88[v90[1834 -(1065 + 767)]]=v37[v90[761 -(373 + 385)]];end elseif ((v91<=(14 -7)) or ((9081 -4464)<(1047 + 142))) then if ((v91<=(3 + 2)) or ((998 + 283 + 407)<(370 + 1303))) then v88[v90[2]]=v88[v90[89 -(7 + 79)]];elseif ((v91==(14 -8)) or ((8183 -5317)==(7022 -(2817 + 2206)))) then v88[v90[254 -(99 + 153)]][v90[61 -(17 + (66 -25))]]=v88[v90[77 -(36 + 37)]];else v36[v90[6 -3]]=v88[v90[5 -3]];end elseif (((193 + 1957)<=((27052 -16965) -5880)) and (v91<=(24 -16))) then local v125=807 -(327 + 480);local v126;local v127;while true do if ((((2575 + 3061) -1814)==(3403 + (1565 -(1026 + 120)))) and (v125==(0 -0))) then v126=0;v127=nil;v125=1 + 0;end if (((4982 -(333 + (1744 -(1237 + 217))))>(1956 -(340 + 1335))) and ((4 -3)==v125)) then while true do if ((v126==(0 -(410 -(242 + 168)))) or ((1763 -1234)==(11533 -8467))) then v127=v90[2 + 0];v88[v127](v13(v88,v127 + (3 -2),v90[530 -(262 + 265)]));break;end end break;end end elseif ((v91>(36 -27)) or ((10622 -6293)<(1977 -811))) then v88[v90[2 + 0]]={};else v88[v90[2 -0]]=v90[1 + 2];end elseif (((3076 -(964 + 306))<=(5089 -(1171 + 609))) and (v91<=(2 + 13))) then if ((v91<=(2 + 10)) or ((1545 + 805)==(6054 -2190))) then if (((2015 -(550 + 1177))==(1365 -((326 -(302 + 17)) + 1070))) and (v91==11)) then local v128=0 -0;local v129;local v130;while true do if (((0 -0)==v128) or ((6772 -(1160 + 158 + 644))==(4663 -(184 + 1629)))) then v129=0 -0;v130=nil;v128=1 + 0;end if ((v128==(1 + 0)) or ((1 + 3)>=(21031 -16554))) then while true do if ((v129==(0 + 0)) or ((3620 -(1138 + 42))<(305 -205))) then v130=v90[3 -1];do return v13(v88,v130,v130 + v90[206 -(130 + 73)]);end break;end end break;end end else local v131=1842 -(1371 + 471);local v132;while true do if (((976 + (3180 -(152 + 7)))>=(4935 -(929 + 1053))) and (v131==(1305 -(461 + 844)))) then v132=v90[1297 -((1963 -749) + 81)];v88[v132]=v88[v132](v13(v88,v132 + 1 + (0 -0),v90[3 + 0]));break;end end end elseif ((v91<=(1547 -(562 + (2216 -1244)))) or (((13941 + 3617) -(24919 -12328))<=(2548 -(318 + (1452 -854))))) then v88[v90[3 -1]][v88[v90[(1666 -(492 + 1172)) + 1]]]=v88[v90[(781 -(648 + 131)) + 2]];elseif (((1792 + 410)<(9837 -6186)) and (v91>14)) then do return;end else v88[v90[(1893 -(1738 + 151)) -2]]=v90[7 -4]~=(0 -(0 -0));end elseif ((v91<=((1698 -458) -(368 + 854))) or (((1560 -(466 + 882)) + 560)>=(8638 -(2022 + 2231)))) then if ((((2699 + 3664) -1670)==((111 + 5814) -(427 + 805))) and (v91<=(2 + 14))) then if ((v88[v90[1918 -(1778 + 138)]]==v88[v90[7 -3]]) or ((5390 -(285 + 605))<=((4848 + 587) -(374 + 797)))) then v72=v72 + (2 -1);else v72=v90[3];end elseif ((1887==(1988 -(39 + 62))) and (v91>(102 -(26 + 59)))) then if ((((5626 + 247) -3781)==(2616 -(953 -429))) and (v90[2 -0]==v88[v90[14 -10]])) then v72=v72 + (1 -0);else v72=v90[14 -11];end else local v169=125 -(91 + 34);local v170;local v171;local v172;local v173;local v174;local v175;while true do if (((5867 -(786 + 749))==(6272 -(844 + 1096))) and (v169==(2 + 1))) then while true do if (((8641 -6175)<=(3329 + 402)) and (v170==((646 -(171 + 474)) + 0))) then v173=nil;v174=nil;v170=1 + 1;end if ((v170==(1063 -(835 + 228))) or ((2148 -(38 + 905))>(8660 -3819))) then local v246=0 + (0 -0);while true do if ((((1 + 0) -(0 + 0))==v246) or ((10525 -(20659 -12620))==(1492 + 401))) then v170=1 + 0;break;end if ((v246==(0 -0)) or ((1491 -(166 + 345))<=(707 -328))) then v171=0 + 0;v172=nil;v246=1 + 0 + 0;end end end if (((2931 -(393 + 1353))==(1835 -(196 + 454))) and ((4 -2)==v170)) then v175=nil;while true do if (((8707 -(4508 -(169 + 393)))>(3501 -(1133 + 703))) and (v171==(1217 -(727 + 488)))) then for v282=v172,v73 do local v283=0 -0;while true do if (((7784 -(1126 + 3866))==(5813 -3021)) and (v283==0)) then v175=v175 + (25 -(8 + 16));v88[v282]=v173[v175];break;end end end break;end if (((5929 -1103)==(1570 + 3256)) and (v171==(1 -0))) then local v279=0 -(0 + 0);while true do if (((39 + 266 + 5)>(144 + 145)) and (v279==(407 -(347 + 59)))) then v171=7 -5;break;end if (((1711 -(1188 + 143))<=(2967 -((1059 -653) + 665))) and (v279==(0 -(0 + 0)))) then local v303=1040 -(653 + 387);while true do if ((v303==(2 -1)) or ((39 + 701)>=(7645 -6080))) then v279=1 + 0 + 0;break;end if (((366 + 186)<(3844 -1961)) and ((1461 -(366 + 1095))==v303)) then v73=(v174 + v172) -(2 -1);v175=0 + 0;v303=1 + (176 -(163 + 13));end end end end end if ((v171==(981 -(275 + 706))) or ((419 + 0)<(1603 -(1413 + 115)))) then local v280=0 + 0;while true do if (((2400 -(293 + 76))>(587 -(216 + 40))) and (v280==(627 -(390 + 236)))) then v171=2 -(1 + 0);break;end if ((v280==0) or ((2726 -(1415 + 354))>=((15700 -12262) -647))) then v172=v90[2 + (283 -(126 + 157))];v173,v174=v85(v88[v172](v13(v88,v172 + (3 -2),v90[333 -(201 + 129)])));v280=1 + 0;end end end end break;end end break;end if ((v169==(0 + 0)) or ((3879 -(18 + 501 + 771))<=(2623 -(24 + 315)))) then v170=0 -0;v171=nil;v169=1;end if ((v169==((1 + 2) -2)) or ((4677 -(202 + 25))<=2160)) then v172=nil;v173=nil;v169=2 -(0 -0);end if ((v169==(1968 -(1513 + 453))) or ((2122 + 608)>3143)) then v174=nil;v175=nil;v169=10 -7;end end end elseif (((237 + (1405 -(616 + 746)))==(1104 -(87 + 737))) and (v91<=(18 + (1323 -(9 + 1313))))) then local v134=817 -(570 + 247);local v135;local v136;while true do if ((v134==(1 -0)) or (((1435 + 2072) -(3850 -(744 + 912)))==(68 + 232))) then v88[v135 + 1 + 0]=v136;v88[v135]=v136[v90[4 -0]];break;end if ((v134==(0 -0)) or ((85 + 0)>(153 + 149))) then local v216=0 -0;while true do if ((v216==(1 + 0)) or ((3873 + 205)==(5654 -(572 + 919)))) then v134=577 -(368 + 208);break;end if ((v216==(1068 -(1064 + 4))) or ((2592 + 1369)>=(9322 -(1718 + 2799)))) then v135=v90[1 + 1];v136=v88[v90[1698 -(524 + 1171)]];v216=2 -1;end end end end elseif ((v91==(5 + 15)) or ((4404 -(254 + 1153))>=(4971 -(8 + 567)))) then if (((5531 -(667 + 170))>(1878 + 23 + 352)) and (v88[v90[729 -(186 + 541)]]==v90[13 -9])) then v72=v72 + (746 -(395 + 350));else v72=v90[627 -(303 + 321)];end elseif ((v88[v90[2 -0]]<v88[v90[867 -(381 + 482)]]) or ((1666 + (589 -(83 + 8)))<=(3863 -2335))) then v72=v90[772 -(82 + 687)];else v72=v72 + (603 -(330 + 2 + 270));end elseif (((9181 -4631)>=(1407 -(1050 + 93))) and (v91<=(11 + 21))) then if (((5177 -(16 + (1533 -770)))>(7720 -5646)) and (v91<=(21 + 5))) then if ((v91<=(75 -52)) or ((20842 -16639)<=(15328 -12169))) then if ((v91==22) or (((1989 -(662 + 915)) + 931)>(1360 + 1411))) then v37[v90[5 -2]]=v88[v90[903 -(153 + 748)]];else v72=v90[2 + 1];end elseif ((v91<=(435 -((831 -(287 + 357)) + 224))) or ((2533 + (1438 -(667 + 218)))>(5289 -(73 + 612)))) then v88[v90[1 + 1]]=v29(v83[v90[10 -7]],nil,v37);elseif ((v91>(70 -45)) or ((2660 -1404)>=(11032 -7997))) then if ((((337 + 11241) -7243)>(11208 -8537)) and  not v88[v90[4 -2]]) then v72=v72 + (2 -1);else v72=v90[1 + 0 + 2];end else local v176=1718 -(1405 + (926 -613));local v177;while true do if (((1459 + 137)>=(677 -(7 + 374))) and ((1976 -(1082 + 894))==v176)) then v177=v90[7 -5];v88[v177]=v88[v177]();break;end end end elseif (((3151 + (2293 -(173 + 1672)))<(2224 + (3198 -(814 + 760)))) and (v91<=(96 -67))) then if ((v91<=(85 -58)) or ((4955 -3283)>(5317 -(206 + 514)))) then local v139=0 + 0 + 0;local v140;local v141;local v142;local v143;local v144;local v145;while true do if (((4998 -(157 + 864))>(5286 -(441 + 1303))) and (v139==(2 + 1))) then while true do if ((v140==(1 -0)) or ((10 + (6761 -3514))==(563 + (6640 -3368)))) then local v236=0 -0;local v237;while true do if (((82 -(37 + 45))==v236) or ((164 + 544)>=(4566 -2514))) then v237=0 -0;while true do if ((((4252 -(154 + 91)) -748)>=(1170 + 259)) and (v237==0)) then v143=v141 + 1 + 1 + 0;v144={v88[v141](v88[v141 + (1679 -(1590 + 88))],v88[v143])};v237=1386 -(885 + 500);end if (((4976 -(518 + 485))==(5871 -(369 + 1529))) and ((1 + 0)==v237)) then v140=9 -(874 -(832 + 35));break;end end break;end end end if (((3388 -1408)<(4411 -((1293 -991) + 728))) and (v140==(0 + 0))) then local v238=0 + 0;local v239;while true do if (((6406 -2313)>=(2740 + 561)) and ((0 + 0)==v238)) then v239=1367 -(771 + 596);while true do if ((v239==(3 -2)) or ((3216 -1145)>=(9085 -6129))) then v140=1 + 0;break;end if (((4482 -2498)==(1941 + 43)) and (v239==((785 + 937) -(571 + 1151)))) then v141=v90[1 + 1];v142=v90[1 + 3];v239=1 -0;end end break;end end end if ((v140==(4 -2)) or (((3943 -1691) -(1747 + 17))>(8809 -5325))) then local v240=0;while true do if ((v240==(0 -0)) or ((322 + (722 -308))==850)) then local v259=0 -0;while true do if (((975 -539)<(445 + 1935)) and (v259==(1924 -(1106 + 817)))) then v240=313 -((1732 -(612 + 834)) + 26);break;end if ((v259==(0 + 0)) or ((4093 + 811)<(2369 -(1876 + 52)))) then for v291=522 -(449 + 1 + 71),v142 do v88[v143 + v291]=v144[v291];end v145=v144[925 -((1011 -(218 + 222)) + 353)];v259=(1462 -(706 + 755)) + 0;end end end if (((253 + 1503)==(2507 -(656 + 95))) and (v240==(1 + 0))) then v140=1 + 2;break;end end end if ((v140==((2854 -(753 + 501)) -(371 + 1226))) or ((1701 + 3045)==(579 -404))) then if ((3482>=(14 + 71)) and v145) then local v247=1259 -(19 + 779 + 461);while true do if (((337 + 658 + 1423)<(5664 -(503 + 1373))) and (v247==(1048 -(379 + 669)))) then v88[v143]=v145;v72=v90[1 + 2];break;end end else v72=v72 + (1 -0);end break;end end break;end if ((v139==(240 -(62 + 178))) or ((3252 -2514)>=(2271 + 1285))) then v140=0 + 0;v141=nil;v139=2 -1;end if ((v139==((13 -9) -2)) or ((11972 -8736)<(8011 -5982))) then local v217=0 -0;while true do if ((v217==(1 + 0)) or ((4095 -(246 + 55))<(3109 -(528 + 318)))) then v139=866 -(211 + 652);break;end if (((627 + 182)==(2310 -(885 + 616))) and (v217==(1168 -(537 + 631)))) then v144=nil;v145=nil;v217=(2368 -(251 + 1580)) -(68 + 468);end end end if ((v139==(2 -1)) or (((2501 -(1325 + 317)) + 1298)<=(1128 -(266 + 171)))) then v142=nil;v143=nil;v139=386 -(23 + 361);end end elseif (((112 + 1823 + 1098)>=(1695 -((34 -27) + 58))) and (v91==(5 + 23))) then v88[v90[25 -((14 -10) + 19)]]();else local v178=(1096 -(24 + 949)) -(110 + 1 + 12);local v179;local v180;local v181;local v182;local v183;while true do if (((20598 -16053)>(3827 -(449 + 795))) and (v178==(1 + 1))) then v183=nil;while true do if ((v179==(1645 -(68 + 1576))) or ((3046 -(1089 + 51))<(829 -625))) then local v248=0 -0;local v249;while true do if (((2948 -1169)<4224) and (v248==(1771 -(1640 + 131)))) then v249=0 + 0;while true do if ((v249==(0 + 0)) or (((4368 -(1287 + 430)) -1274)>((11793 -(22 + 552)) -6328))) then local v304=(0 -0) -0;while true do if ((v304==(0 + 0)) or ((5639 -((1252 -748) + 789))<1031)) then v73=(v182 + v180) -(1 + 0);v183=1665 -(867 + 47 + 751);v304=1 + 0;end if ((v304==1) or (((1795 -(52 + 1098)) + 4344)<=(9129 -5185))) then v249=1 + 0;break;end end end if ((((477 + 4742) -((1076 -(603 + 382)) + 318))>(2169 + 1859)) and (v249==(1 + 0))) then v179=3 -1;break;end end break;end end end if ((v179==((1421 -(1000 + 420)) + 1)) or ((518 + 332)>=(1099 + 147))) then for v260=v180,v73 do local v261=0 + (0 -0);while true do if (((2916 -(790 + 381))<(1997 + 504)) and (v261==0)) then v183=v183 + 1 + 0;v88[v260]=v181[v183];break;end end end break;end if ((v179==(920 -(572 + 348))) or ((8173 -3758)<(325 + 2274))) then local v250=0 -0;local v251;while true do if ((v250==(0 + 0)) or ((886 -426)>=(4609 -(54 + 1062)))) then v251=0;while true do if ((v251==(1 + (0 -0))) or ((6670 -1757)<=(986 + (1611 -(254 + 1245))))) then v179=1 -0;break;end if ((928<(6470 -4469)) and (v251==(1067 -(1029 + 38)))) then local v305=0 -0;while true do if (((0 + 0)==v305) or ((905 -683)>=(2562 + 516 + 1324))) then v180=v90[(853 + 155) -(92 + 914)];v181,v182=v85(v88[v180]());v305=301 -(48 + 252);end if ((v305==(2 -1)) or ((95 + 24)==(4509 -(3040 -1068)))) then v251=4 -3;break;end end end end break;end end end end break;end if (((4189 + 173)==(4273 + 89)) and (v178==(1057 -(666 + 391)))) then v179=0 -0;v180=nil;v178=1828 -(1546 + 281);end if ((v178==(1 + 0)) or ((1928 -(1256 + 508))>(12461 -8895))) then v181=nil;v182=nil;v178=6 -4;end end end elseif (((6395 -3517)>=((2486 -(167 + 761)) -(352 + 413))) and (v91<=(57 -27))) then local v146=1155 -(554 + 601);local v147;while true do if ((((6119 -3743) -1481)<(6927 -(6439 -3951))) and (v146==(0 + 0))) then v147=113 -(22 + 91);while true do if ((v147==0) or (((16508 -6811) -6795)<8)) then v88[v90[98 -(54 + 42)]]=v90[2 + 1]~=(1470 -(1348 + 122));v72=v72 + (1948 -(1448 + 499));break;end end break;end end elseif ((v91>31) or (((8140 -6171) + 174)==(3654 -1656))) then local v184=0 -0;local v185;local v186;while true do if ((v184==(0 -0)) or ((2815 -(1349 + 609))>=(4490 -(140 + 255)))) then local v231=0 -0;while true do if (((2028 -(303 + 108))<=(4775 -(230 + 146))) and ((1 -0)==v231)) then v184=869 -((328 -(156 + 67)) + 763);break;end if ((v231==(1185 -(1141 + 44))) or (1644>=(2480 + 1438))) then v185=v90[4 -(1 -0)];v186=v88[v185];v231=1 + 0;end end end if ((v184==1) or ((137 + 3614)==(1001 + 57 + 419))) then for v242=v185 + (2 -1),v90[4] do v186=v186   .. v88[v242];end v88[v90[5 -3]]=v186;break;end end else local v187=1060 -(982 + (1766 -(802 + 886)));local v188;local v189;local v190;local v191;while true do if ((v187==0) or ((674 + 3058)<(8352 -6320))) then v188=v90[2];v189,v190=v85(v88[v188](v88[v188 + 1]));v187=3 -2;end if ((v187==(5 -3)) or ((1662 + 55)==(11820 -8267))) then for v243=v188,v73 do local v244=0 + 0;while true do if ((v244==(1757 -(1369 + 388))) or ((2492 -(125 + 5 + 73))>=((6286 -(456 + 808)) -(90 + 89)))) then v191=v191 + (2 -(2 -1));v88[v243]=v189[v191];break;end end end break;end if ((v187==(179 -(66 + 6 + (563 -(64 + 393))))) or ((19517 -14576)<=(301 + 1650))) then v73=(v190 + v188) -(1 + 0);v191=(0 -0) + 0;v187=1444 -(650 + (1261 -(150 + 319)));end end end elseif ((v91<=(1004 -(718 + 248))) or ((13453 -(2894 + 6573))<=(417 -294))) then if ((v91<=(113 -78)) or ((6534 -4844)>(4944 -1415))) then if ((v91<=((30 + 17) -14)) or (((3926 -(243 + 774)) -(80 + 695))<=(3442 -1982))) then local v148=0 -0;local v149;local v150;while true do if ((((238 -(43 + 195)) -0)==v148) or (((10461 -(51 + 117)) -7324)>=((17316 -(90 + 43)) -12357))) then local v218=(1582 -(1115 + 467)) + 0;while true do if ((v218==(1 -0)) or ((103 + 1471 + 2526)<=(85 + 1076))) then v148=1845 -(204 + 1640);break;end if (((4219 -(29 + 430))>=(529 + 2315)) and ((0 -0)==v218)) then v149=0 + 0;v150=nil;v218=1 + 0;end end end if (((1818 + 2449)>(5742 -3837)) and (v148==(1 + 0))) then while true do if ((v149==(0 -0)) or ((5169 -2469)==(536 + (1185 -392)))) then v150=v90[(5 + 2) -5];v88[v150](v13(v88,v150 + 1 + 0,v73));break;end end break;end end elseif ((v91>(1642 -(721 + 887))) or ((151 + 88)==(1246 + 1692))) then v88[v90[624 -(369 + 253)]]=v36[v90[2 + 1]];else do return v88[v90[2 -0]];end end elseif (((3311 -(158 + 233))>=(1826 -(1516 -(578 + 630)))) and (v91<=(25 + 11))) then v88[v90[1432 -(1185 + 245)]]=v88[v90[3 + 0]][v88[v90[10 -6]]];elseif ((v91>(426 -(66 + 25 + 298))) or (((5533 -(115 + 1635)) + 696)<(1508 + 586))) then local v193=0 -0;local v194;local v195;while true do if (((1819 -(1108 + 191))<(4535 -(51 + 3))) and (v193==(910 -(77 + 833)))) then v194=0 + (1407 -(437 + 970));v195=nil;v193=1822 -(1742 + (1109 -(741 + 289)));end if (((1343 + 666)<=(3353 + (1903 -1289))) and ((3 -2)==v193)) then while true do if ((v194==(0 + 0)) or ((8121 -5155)>=(9366 -6048))) then v195=v88[v90[1553 -(1055 + 494)]];if (((4765 -(791 + 734))<=(6692 -(458 + 345 + 1005))) and  not v195) then InstrPoint=InstrPoint + (1 -0);else local v273=0 -0;while true do if (((5327 -(376 + 1550))<=(5280 -(442 + 39 + 125))) and (v273==(252 -(251 + 1)))) then v88[v90[2 + 0]]=v195;InstrPoint=v90[1 + 2];break;end end end break;end end break;end end else local v196=892 -(145 + 747);local v197;local v198;local v199;while true do if (((8012 -(2951 + 2305))>2645) and (v196==((1708 + 272) -(1937 + 42)))) then v199=nil;while true do if (((3215 -(10 + 34))>=(1623 + 1476)) and (v197==(1788 -(754 + 1034)))) then v198=v90[4 -2];v199={};v197=(849 + 350) -(1063 + 135);end if ((v197==(1 -0)) or ((3710 -(487 + 147))>=(18735 -(48411 -34085)))) then for v263=1 -0, #v87 do local v264=0 + 0;local v265;local v266;while true do if ((v264==(1327 -((1739 -611) + 199))) or ((2048 -1250)==((3350 -(369 + 983)) + 8))) then v265=0 + 0;v266=nil;v264=4 -(3 + 0);end if ((v264==(2 -1)) or (((6746 -(1157 + 322)) -(445 + 345))<(4241 -(141 + 182 + 13)))) then while true do if (((1267 -(834 + 433))==v265) or ((3144 -1390)<=(1019 -(869 + 30 + 1)))) then v266=v87[v263];for v310=0 -0, #v266 do local v311=553 -(120 + 433);local v312;local v313;local v314;local v315;while true do if ((v311==(8 -6)) or ((3283 -(1153 + 481))>=3478)) then while true do if ((v312==(1968 -(1333 + 634))) or ((7426 -3514)==(1123 + 785))) then v315=v313[2 + 0];if ((((2633 + 2028) -((1399 -(851 + 525)) + 307 + 134))>=(4100 -(8 + 86))) and (v314==v88) and (v315>=v198)) then local v329=0 + 0;while true do if ((v329==(0 + 0)) or ((2492 + 1425)<=(2453 -(21 + 648)))) then v199[v315]=v314[v315];v313[(1100 -(430 + 116)) -(161 + 392)]=v199;break;end end end break;end if ((v312==(0 -0)) or (((2353 -690) -489)==(52 + 536))) then local v327=358 -(337 + 21);while true do if ((((8925 -4687) + 713)>=(1105 + 1208)) and (v327==(3 -2))) then v312=1 -(780 -(675 + 105));break;end if (((1150 -(405 + 155))<(7771 -4768)) and (v327==0)) then v313=v266[v310];v314=v313[240 -((2149 -(276 + 1645)) + 11)];v327=1 + 0;end end end end break;end if ((v311==(1 + 0)) or ((9962 -5710)<=(6549 -3549))) then v314=nil;v315=nil;v311=2 + 0;end if ((v311==((1676 -(968 + 708)) + 0)) or ((1293 + 1525)<=((1031 -(163 + 526)) + 892))) then v312=0 + 0 + 0;v313=nil;v311=1 + 0;end end end break;end end break;end end end break;end end break;end if ((v196==(0 + 0)) or ((2725 + 635)>(27 + 4286))) then v197=0 -0;v198=nil;v196=846 -(117 + 728);end end end elseif (((5943 -(719 + 1241))>=(2594 -(739 + 508))) and (v91<=(130 -89))) then if ((v91<=(877 -(542 + 296))) or ((5566 -4088)>=(4976 -(644 + 177)))) then local v152=0 + 0;local v153;local v154;local v155;while true do if (((6067 -(979 + 891))<(11107 -6372)) and (v152==((2568 -1094) -(738 + 736)))) then local v219=579 -(15 + 564);while true do if ((v219==(0 -0)) or ((2697 -(306 + 1298))<(3488 -2551))) then v153=v90[6 -4];v154={v88[v153](v88[v153 + 1 + 0])};v219=1 -0;end if (((1021 -451)<=(1385 -389)) and (v219==(590 -(257 + 332)))) then v152=1;break;end end end if (((1 + 0)==v152) or ((700 + 475)<368)) then v155=0 -(0 -0);for v226=v153,v90[8 -4] do local v227=0 + 0;local v228;while true do if (((8574 -5691)<(4342 -(838 + 618))) and ((1126 -(417 + 709))==v227)) then v228=0 + 0;while true do if (((1755 -(893 + 862))==v228) or ((4592 -(310 + 586))<=(3021 -(80 + 19)))) then v155=v155 + (1208 -((2224 -1522) + 505));v88[v226]=v154[v155];break;end end break;end end end break;end end elseif (((3818 -(271 + 1168))==(1839 + 540)) and (v91>(217 -(105 + (392 -(287 + 33)))))) then local v200=0 -0;local v201;local v202;local v203;local v204;while true do if ((v200==(1 + 1)) or ((2815 -2203)>(108 + 573))) then while true do if ((v201==1) or ((1307 -(249 + 51))<=(1301 -966))) then local v252=388 -(382 + 6);while true do if (((36 -26)<=((4429 -1176) -2333)) and (v252==(0 -0))) then v204={};v203=v10({},{__index=function(v285,v286)local v294=0 -0;local v295;local v296;while true do if ((v294==(1 -0)) or ((8012 -5329)==(568 + 593))) then while true do if (((1905 -(1816 + 89))==v295) or ((1305 + 1646)>=(2230 + 854))) then local v319=1386 -(489 + 276 + 621);while true do if (((3179 -(16 + 55))>=2846) and (v319==(0 + 0))) then v296=v204[v286];return v296[2 -1][v296[746 -(448 + 296)]];end end end end break;end if ((v294==(0 -0)) or ((1089 + (3628 -(154 + 985)))<(5450 -3815))) then v295=(1144 -(612 + 532)) + 0;v296=nil;v294=155 -(13 + 141);end end end,__newindex=function(v287,v288,v289)local v297=0 -0;local v298;local v299;local v300;while true do if ((v297==(1163 -(166 + 997))) or ((3822 -(1798 + (365 -166)))==(849 + 3812))) then v298=966 -(770 + 196);v299=nil;v297=1552 -(49 + 1104 + 398);end if (((1486 + 314)<(2416 + 839)) and (v297==(1 + 0))) then v300=nil;while true do if ((((4097 -1709) + 1623)>(1245 + 246)) and ((0 + 0)==v298)) then v299=0 -0;v300=nil;v298=1 + 0;end if ((((3878 + 3712) -4255)>=(1466 -(53 + 540))) and (v298==(1 + 0 + 0))) then while true do if ((v299==(567 -(441 + 126))) or (323>=(3074 + 633))) then v300=v204[v288];v300[1 + 0][v300[4 -2]]=v289;break;end end break;end end break;end end end});v252=1522 -(970 + 551);end if ((v252==(1203 -(613 + 589))) or ((736 + 796)<=(24 + 1404))) then v201=2;break;end end end if ((v201==(0 + 0)) or ((631 + 2836)>=(9281 -5558))) then v202=v83[v90[1 + 2]];v203=nil;v201=1892 -((2460 -(696 + 16)) + 143);end if ((v201==(2 + 0)) or ((2782 + 299)<=(1977 -(90 + 37)))) then for v267=4 -3,v90[1 + (1001 -(637 + 361))] do local v268=0 + 0;local v269;local v270;local v271;while true do if (((722 + 2407)>=(9689 -7684)) and ((1841 -(10 + 1830))==v268)) then v271=nil;while true do if (((381 + 14)<=(1800 + 2427)) and (v269==(3 -2))) then while true do if (((1922 -(1016 + 906))==v270) or ((906 + 2867)<=(1497 + 1046))) then local v317=1860 -(133 + 1727);while true do if ((v317==(1 + 0)) or ((3224 -(305 + 405))==3434)) then v270=736 -(298 + 156 + 281);break;end if ((v317==(1620 -(821 + 799))) or ((151 + 2052 + 349)<=(3860 -2942))) then local v326=0 + 0;while true do if ((v326==(1521 -(419 + 1101))) or ((505 -217)>=(3652 + 351))) then v317=3 -2;break;end if (((1769 -(432 + 13 + 24))<(3072 -(631 + 1065))) and (v326==(0 -0))) then v72=v72 + (4 -3);v271=v82[v72];v326=621 -(490 + 130);end end end end end if (((1905 -683)==(2088 -(473 + 393))) and (v270==(1 + 0))) then if ((v271[(5 -3) -1]==5) or ((193 + 796)==(989 + 362))) then v204[v267-(1 + 0)]={v88,v271[8 -5]};else v204[v267-(2 -1)]={v36,v271[1 + 2]};end v87[ #v87 + 1 + 0]=v204;break;end end break;end if ((v269==(1766 -((205 -126) + 1687))) or ((6899 -(5919 -(517 + 488)))<(1349 -(458 + 133)))) then local v309=0 + (0 -0);while true do if ((v309==(1785 -(1549 + 235))) or ((5627 -(517 + 997))<=(4495 -(1474 + 6)))) then v269=1 + 0;break;end if (((1399 -(268 + (2028 -(1407 + 303))))<(3563 + 1333)) and (v309==(0 + 0))) then v270=0 -0;v271=nil;v309=4 -(1737 -(385 + 1349));end end end end break;end if ((v268==((3382 -1863) -(615 + 904))) or ((6871 -4226)<(132 -40))) then v269=0 -0;v270=nil;v268=840 -(213 + 626);end end end v88[v90[969 -(890 + 77)]]=v29(v202,v203,v37);break;end end break;end if (((2373 -(492 + 173))<(7271 -2964)) and ((1860 -(808 + (3303 -2252)))==v200)) then v203=nil;v204=nil;v200=1 + 1;end if ((((197 + 234) -(203 + 228))==v200) or ((3877 -1909)<=(1021 -229))) then v201=1255 -(267 + 988);v202=nil;v200=1 + 0;end end else for v220=v90[1 + 1],v90[3] do v88[v220]=nil;end end elseif ((v91<=(600 -(304 + 254))) or ((918 -(182 + 710))>(3159 -(1248 + (674 -(444 + 18)))))) then local v156=0 -0;local v157;local v158;while true do if (((4755 -(243 + 1685))==(6372 -3545)) and (v156==(59 -(31 + 28)))) then local v222=0 -0;while true do if (((2036 -358)<((4894 -(669 + 128)) -((2064 -(1043 + 589)) + 1501))) and (v222==(1 -0))) then v156=1 + (0 -0);break;end if ((v222==(0 -0)) or ((6710 -2949)<(5606 -(557 + (2738 -(1030 + 374)))))) then v157=0;v158=nil;v222=1 + 0;end end end if ((v156==(3 -2)) or ((8058 -3491)<=(90 + 93 + 4039))) then while true do if ((v157==(919 -((373 -194) + 740))) or ((392 + 1732)==((6874 -4193) -941))) then v158=v90[(1218 -(732 + 485)) + 1];v88[v158]=v88[v158](v88[v158 + 1 + 0]);break;end end break;end end elseif (((3180 -(1689 + 48))==(1688 -(43 + 202))) and (v91>(61 -18))) then v88[v90[7 -5]]=v88[v90[1608 -(807 + 798)]][v90[7 -(8 -5)]];else local v206=0 -0;local v207;while true do if ((v206==((0 -0) + 0)) or ((5920 -3054)<(114 + (154 -74)))) then v207=v90[1 + 1];v88[v207]=v88[v207](v13(v88,v207 + (91 -(88 + 2)),v73));break;end end end v72=v72 + (962 -(226 + 735));break;end if ((v97==(0 + 0)) or (324<=(410 -(25 + 151)))) then local v104=190 -(29 + 161);while true do if (((3555 -((2135 -1149) + 517))>=(351 -(141 + 191))) and (v104==(1 + 0))) then v97=1 + 0;break;end if ((v104==(1116 -(754 + 362))) or ((7883 -3174)<(8101 -5876))) then v90=v82[v72];v91=v90[142 -(15 + 126)];v104=271 -(13 + 257);end end end end break;end end break;end if ((v95==(781 -(23 + 754 + 4))) or ((2688 + 1593)<((3326 -(561 + 578)) + 1264))) then v96=733 -(191 + 542);v97=nil;v95=528 -(153 + 374);end end end end A,B=v27(v11(v76));if  not A[1] then local v92=0;local v93;while true do if (v92==0) then v93=v35[4][v72] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end if (v59==0) then v60=v35[1];v61=v35[2];v59=1;end end end return v29(v28(),{},v17)(...);end v0=4;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9(),...);break;end end end
